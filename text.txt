<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <title>Rivo</title>
  </head>
  <body>
    <div id="app"></div>
    <!-- built files will be auto injected -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/87/three.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ScrollMagic/2.0.7/ScrollMagic.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ScrollMagic/2.0.7/plugins/animation.gsap.min.js"></script>
  </body>

  <script src="https://threejs.org/build/three.min.js"></script>
  <script src="https://threejs.org/examples/js/loaders/OBJLoader.js"></script>
  <script src="https://threejs.org/examples/js/controls/OrbitControls.js"></script>
  <script>
      // var scene = new THREE.Scene();
      // var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
      // camera.position.set(0, 0, 100);
      // var renderer = new THREE.WebGLRenderer();
      // renderer.setClearColor(0x404040);
      // renderer.setSize(window.innerWidth, window.innerHeight);
      // document.body.appendChild(renderer.domElement);

      // var controls = new THREE.OrbitControls(camera, renderer.domElement);

      var light = new THREE.DirectionalLight(0xffffff, 0.1);
      light.position.setScalar(250);
      
      // scene.add(new THREE.GridHelper(100, 100));
       var objLoader = new THREE.OBJLoader();


      // function render() {
      //     requestAnimationFrame(render);
      //     renderer.render(scene, camera);
      // }
      // render();
      var scene = new THREE.Scene();
      scene.add(light);
      var camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 0.1, 1000);
      camera.position.set(0, 1, 250);
      var renderer = new THREE.WebGLRenderer({antialias: true});
      renderer.setSize(window.innerWidth, window.innerHeight);
      document.body.appendChild(renderer.domElement);

      var controls = new THREE.OrbitControls(camera, renderer.domElement);

      // scene.add(new THREE.GridHelper(10, 10));
      scene.add(new THREE.AmbientLight(0xffffff, 0.5));
      // var geom = new THREE.BoxGeometry(0.1, 0.1, 1);
      // geom.translate(0, 0, 0.5);
      // var mesh = new THREE.Mesh(geom, new THREE.MeshBasicMaterial({color: "aqua", wireframe: true}));
      // scene.add(mesh);
      objLoader.load('https://raw.githubusercontent.com/developerscompany/rivo-off-site/master/src/assets/3Dmodels/%D1%82%D1%80%D0%B0%D0%BF%D0%B5%D1%86%D1%96%D1%8F.obj?token=AGFTNVJR2ZBFA37XS277CRC5STEF6', function (object) {
        object.rotation.x = -Math.PI * 0.5;
        // object.rotation.x = 1.5
        // object.rotation.z = 1
        // object.rotation.y = 0
        // object.position.x = - 25
        object.scale.set(0.85, 1, 0.85);
        
        // var box = new THREE.Box3().setFromObject(object);
        // var box3Helper = new THREE.Box3Helper(box);
        // scene.add(box3Helper);
        scene.add(object);
        object.translateZ(0)
        function render() {
        requestAnimationFrame(render);
        // mesh.rotation.z += 0.01;
        object.rotation.z += 0.01
        renderer.render(scene, camera);
      }
      render();
      });

      
      // mesh.rotation.x = 1.6
      // mesh.position.y = 0.5
      // mesh.rotation.y = - 0.5



    </script>
</html>
